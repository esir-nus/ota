# OTA System Requirements

# Core dependencies
python-daemon>=2.3.0    # Base daemon functionality
lockfile>=0.12.2        # File locking for daemon
PyYAML>=6.0.0           # YAML parsing for configuration
structlog>=23.1.0       # Structured logging
psutil>=5.9.0           # System monitoring and resource checking
netifaces>=0.11.0       # Network interface information

# Networking and communication
requests>=2.31.0        # HTTP/HTTPS client for OTA server communication
urllib3>=2.0.0          # HTTP client used by requests (explicit version for security)
tenacity>=8.0.0         # For robust retry mechanisms

# API and scheduling
Flask>=3.0.0            # Lightweight API for inter-process communication
Flask-SocketIO>=5.3.0   # Real-time events with WebSockets
python-socketio>=5.8.0  # Socket.IO client for the daemon manager
eventlet>=0.35.0        # For WebSocket support
apscheduler>=3.10.1     # Advanced Python Scheduler for flexible scheduling
python-crontab>=2.6.0   # Crontab management for scheduled updates
semver>=2.13.0          # Semantic versioning for version comparison

# Storage and security
cryptography>=39.0.0    # Secure storage for sensitive configuration
SQLAlchemy>=1.4.0       # SQL toolkit for lightweight database operations

# System integration
systemd-python>=234     # Systemd integration for service management
dbus-python>=1.2.18     # D-Bus communication for system services

# GUI tools - IMPLEMENTED AND VALIDATED âœ…
# Tkinter comes with Python by default on most systems
# These tools are fully functional for testing and management:
# - tools/gui/update_generator.py (Update package and manifest creation)
# - tools/gui/daemon_manager.py (Daemon monitoring and control)
# Both tested successfully in Ubuntu X11 environment

# Additional GUI dependencies for enhanced functionality
#python-socketio[client]>=5.8.0  # For daemon manager WebSocket connectivity (included above)

# Testing and development
pytest>=7.0.0           # Testing framework
pytest-cov>=4.0.0       # Test coverage reporting
black>=22.3.0           # Code formatting
flake8>=4.0.1           # Code linting
mypy>=0.950             # Type checking
isort>=5.10.1           # Import sorting

# Note: For voice command processing, we rely on the existing Qwen integration 
# from the main robot-ai project without modifying it
